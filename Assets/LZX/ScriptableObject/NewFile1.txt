1. None = 0
描述：没有特殊选项，使用默认的打包设置。
用途：最基础的 AssetBundle 打包，没有附加选项，适用于常规的打包需求。
2. UncompressedAssetBundle = 1
描述：不对 AssetBundle 进行压缩。
用途：打包时不压缩数据，通常适用于需要快速加载并且不在乎存储空间的场景。
适用场景：开发阶段或者需要尽量避免解压缩操作的情况。
5. DisableWriteTypeTree = 8
描述：在打包时禁用类型树写入。
用途：避免在 AssetBundle 中包含类型树信息，这可以减小文件大小，但在一些情况下可能导致加载时的问题，尤其是当类型信息在加载过程中需要时。
适用场景：如果你确定不需要类型信息（例如自定义的加载系统），可以禁用此选项来节省空间。
7. ForceRebuildAssetBundle = 32
描述：强制重新构建 AssetBundle，即使现有的资源未发生变化。
用途：在需要强制重新打包所有资源时使用，通常用于确保所有 AssetBundle 重新生成，或者在修改了某些不可见的依赖关系时使用。
8. IgnoreTypeTreeChanges = 64
描述：在增量构建时忽略类型树的更改。
用途：用于在增量构建时不考虑类型树的修改，这样可以节省时间，但可能会错过某些资源的变化。
适用场景：用于避免因类型树的变化引起不必要的增量构建。
9. AppendHashToAssetBundleName = 128
描述：在 AssetBundle 名称后附加哈希值。
用途：通过在 AssetBundle 的文件名中加入哈希值来确保不同版本的 AssetBundle 文件不会冲突。这对于版本管理和资源更新非常有用。
适用场景：确保每次生成的 AssetBundle 文件名唯一，避免覆盖旧的文件。
10. ChunkBasedCompression = 256
描述：使用基于块的 LZ4 压缩。
用途：启用这种压缩方式可以获得较好的压缩比，同时保持相对较快的加载速度，适用于需要平衡加载速度和压缩空间的场景。
适用场景：存储空间有限但又需要保持较快加载速度的情况。
11. StrictMode = 512
描述：如果构建过程中有任何错误，则不允许构建成功。
用途：启用严格模式后，如果打包过程中出现错误（例如，缺少资源文件），构建将无法完成。
适用场景：确保构建过程中没有忽略任何错误。
12. DryRunBuild = 1024
描述：执行干运行构建，即不会实际生成 AssetBundle 文件。
用途：此选项用于测试构建设置是否正确，检查是否有错误或遗漏，但不会进行实际的文件生成。
适用场景：测试或验证构建设置时使用，避免产生无用的文件。
13. DisableLoadAssetByFileName = 4096
描述：禁用通过文件名加载资源的功能。
用途：默认情况下，AssetBundle 允许通过文件名加载资源。启用此选项后，加载过程只能使用资源的引用或路径，不能直接使用文件名。
适用场景：限制资源加载方式的场景，可能有助于提高安全性或控制资源的加载方式。
14. DisableLoadAssetByFileNameWithExtension = 8192
描述：禁用通过文件名及扩展名加载资源的功能。
用途：类似于上面的选项，但这个禁用了通过文件名和扩展名进行加载。
适用场景：如果你希望完全禁用通过文件名和扩展名加载资源的方式，可以启用此选项。
15. AssetBundleStripUnityVersion = 32768
描述：在构建过程中移除 Unity 版本号信息。
用途：移除 Unity 版本信息，这样打包的 AssetBundle 就不再包含 Unity 版本的相关信息。
适用场景：如果你希望 AssetBundle 与 Unity 版本解耦，避免因版本变化而导致的兼容性问题。
16. UseContentHash = 65536
描述：使用资源内容的哈希值计算 AssetBundle 的哈希。
用途：这会确保即使文件名没有变化，资源内容发生变化时仍然会生成新的 AssetBundle，这有助于改进增量构建的结果。
适用场景：推荐使用此选项以提高增量构建的准确性，确保文件内容变化时能够重新生成相应的 AssetBundle。
17. RecurseDependencies = 131072
描述：递归计算 AssetBundle 的依赖项。
用途：当资源存在依赖关系（例如脚本化对象等）时，启用此选项以确保所有相关依赖项被正确处理。
适用场景：当你有一系列相关的资产（如多层次的资源依赖）时，使用此选项可以确保所有依赖关系都被包含在内。